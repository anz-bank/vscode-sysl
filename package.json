{
  "name": "vscode-sysl",
  "displayName": "Sysl",
  "description": "Write Sysl specs easily with instant visual feedback.",
  "author": "ANZ Bank",
  "publisher": "anz-bank",
  "version": "0.20.0",
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/anz-bank/vscode-sysl"
  },
  "categories": [
    "Programming Languages"
  ],
  "icon": "docs/icon.png",
  "keywords": [
    "specification",
    "diagrams"
  ],
  "engines": {
    "vscode": "^1.52.0"
  },
  "activationEvents": [
    "onLanguage:sysl",
    "onCustomEditor:sysl.gojsDiagram"
  ],
  "main": "./out/main.js",
  "contributes": {
    "commands": [
      {
        "command": "sysl.renderDiagram",
        "title": "Render Diagram",
        "category": "Sysl",
        "icon": "$(open-preview)"
      },
      {
        "command": "sysl.diagram.snapshot",
        "title": "Save Diagram Snapshot",
        "category": "Sysl",
        "icon": "$(device-camera)"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "resourceExtname == .sysl && activeCustomEditorId != 'sysl.gojsDiagram'",
          "command": "sysl.renderDiagram",
          "group": "navigation@1"
        },
        {
          "when": "activeCustomEditorId == 'sysl.gojsDiagram'",
          "command": "sysl.diagram.snapshot",
          "group": "navigation@1"
        }
      ]
    },
    "languages": [
      {
        "id": "sysl",
        "aliases": [
          "Sysl",
          "sysl"
        ],
        "extensions": [
          ".sysl"
        ],
        "configuration": "./extension/syntax/language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "sysl",
        "scopeName": "source.sysl",
        "path": "./extension/syntax/sysl.tmLanguage.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Sysl",
      "properties": {
        "sysl.tool.binaryPath": {
          "type": "string",
          "default": "",
          "description": "Path to the Sysl binary to use for Sysl operations. If empty, the Sysl extension will download and manage its own Sysl binary.\n\nSee https://sysl.io/docs/installation for installation instructions."
        }
      }
    },
    "customEditors": [
      {
        "viewType": "sysl.gojsDiagram",
        "displayName": "Sysl Diagram",
        "selector": [
          {
            "filenamePattern": "*.sysl"
          }
        ],
        "priority": "option"
      },
      {
        "viewType": "sysl.htmlView",
        "displayName": "HTML View",
        "selector": [
          {
            "filenamePattern": "*.sysl"
          }
        ],
        "priority": "option"
      },
      {
        "viewType": "sysl.multiView",
        "displayName": "Multi View",
        "selector": [
          {
            "filenamePattern": "*.sysl"
          }
        ],
        "priority": "option"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn build",
    "esbuild-base": "esbuild ./extension/main.ts --bundle --outfile=out/main.js --external:vscode --external:electron --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-prod": "npm run esbuild-base -- --minify",
    "postinstall": "yarn --cwd renderer install",
    "prebuild": "yarn install",
    "build": "yarn --cwd renderer build && yarn compile && yarn esbuild-prod",
    "compile": "tsc",
    "plugins": "make -C extension/plugins plugins",
    "schema": "yarn schema-ts && yarn schema-go",
    "schema-ts": "json2ts extension/protocol/plugin.schema.json --output extension/protocol/plugin.d.ts && yarn prettier --write extension/protocol/plugin.d.ts",
    "schema-go": "go run github.com/atombender/go-jsonschema/cmd/gojsonschema -p protocol extension/protocol/plugin.schema.json --output extension/protocol/plugin_schema.go",
    "watch": "tsc -w",
    "package": "vsce package",
    "tidy": "prettier --write .",
    "lint": "eslint . --ext .ts,.tsx",
    "test": "yarn test-unit && yarn test-ui",
    "test-ui": "node out/test/runTest",
    "test-unit": "ts-node extension/test/runUnitTest",
    "test-watch": "nodemon --watch 'extension/**' --ext 'ts,json,sysl' --exec 'ts-node extension/test/runUnitTest'"
  },
  "devDependencies": {
    "@types/chai": "^4.2.21",
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/mock-fs": "^4.13.1",
    "@types/node": "^14.17.5",
    "@types/semver": "^7.3.9",
    "@types/sinon-chai": "^3.2.5",
    "@types/vscode": "^1.52.0",
    "@typescript-eslint/eslint-plugin": "^2.26.0",
    "@typescript-eslint/parser": "^2.26.0",
    "@vscode/test-electron": "^1.6.2",
    "chai": "^4.3.4",
    "download": "^8.0.0",
    "esbuild": "^0.12.21",
    "eslint": "^7.32.0",
    "glob": "^7.1.7",
    "got": "^11.8.2",
    "json-schema-to-typescript": "^10.1.4",
    "mocha": "^9.1.0",
    "mock-fs": "^5.0.0",
    "nodemon": "^2.0.12",
    "p-retry": "^4.6.1",
    "prettier": "^2.3.2",
    "replace": "^1.2.1",
    "sinon": "^11.1.2",
    "sinon-chai": "^3.7.0",
    "ts-mocha": "^8.0.0",
    "ts-node": "^10.2.1",
    "ts-protoc-gen": "^0.15.0",
    "typescript": "^4.3.5",
    "vsce": "^1.96.2",
    "vscode-languageclient": "^7.0.0",
    "vscode-test": "^1.6.1",
    "vscode-uri": "^3.0.2"
  },
  "dependencies": {
    "lodash": "^4.17.21",
    "semver": "^7.3.5",
    "vscode-languageserver": "^7.0.0",
    "vscode-languageserver-protocol": "^3.16.0",
    "vscode-languageserver-textdocument": "^1.0.1"
  }
}
